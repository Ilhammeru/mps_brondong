/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/employee/index.js":
/*!****************************************!*\
  !*** ./resources/js/employee/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser.js */ \"./node_modules/process/browser.js\");\nconsole.log(process.env.DB_PORT);\nvar _columns = [{\n  data: \"id\",\n  width: \"0.5%\",\n  orderable: false,\n  visible: false\n}, {\n  data: \"employee\"\n}, {\n  data: \"division\"\n}, {\n  data: \"date_time\",\n  width: \"15%\"\n}, {\n  data: \"notes\",\n  width: \"15%\"\n}, {\n  data: \"status\"\n}, {\n  data: \"approved_by\"\n}, {\n  data: \"checked_by\"\n}, {\n  data: 'action'\n}];\nvar dataTables = $(\"#dt_table\").DataTable({\n  responsive: true,\n  processing: true,\n  serverSide: true,\n  scrollX: true,\n  order: [[0, \"desc\"]],\n  ajax: \"{{ route('permission.leave-office.json') }}\",\n  columns: _columns\n});\nvar modalLeaveOffice = document.getElementById('modalLeaveOffice');\nmodalLeaveOffice.addEventListener('hidden.bs.modal', function (event) {\n  $('#btnSave').attr('disabled', false);\n  $('#btnSave').text('Simpan');\n  document.getElementById('formLeaveOffice').reset();\n  $('#divisionId').html('');\n}); // variable\n\nvar form = $('#formLeaveOffice');\nvar elem = $('#btnSave');\nvar modal = $('#modalLeaveOffice'); // select2\n\n$('#divisionFilter').select2();\n$('#positionFilter').select2();\n$('#divisionFilter').on('change', function (e) {\n  e.preventDefault();\n  var val = $(this).val();\n  $.ajax({\n    type: 'GET',\n    url: \"{{ url('/position/getData') }}\" + \"/\" + val,\n    success: function success(res) {\n      var data = res.data;\n      var option = \"<option value=''>- Pilih Posisi -</option>\";\n\n      for (var a = 0; a < data.length; a++) {\n        option += \"<option value=\\\"\".concat(data[a].id, \"\\\">\").concat(data[a].name, \"</option>\");\n      }\n\n      $('#positionFilter').html(option);\n      $('#positionFilter').select2();\n    }\n  });\n});\n$('#btnAdd').on('click', function (e) {\n  e.preventDefault();\n  $.ajax({\n    type: \"GET\",\n    url: \"{{ route('employees.getData') }}\",\n    dataType: 'json',\n    success: function success(res) {\n      var data = res.data;\n      var option = \"<option value=''>- Pilih Karyawan -</option>\";\n\n      for (var a = 0; a < data.length; a++) {\n        option += \"<option value=\\\"\".concat(data[a].id, \"\\\">\").concat(data[a].name, \" ( \").concat(data[a].position.name, \" )</option>\");\n      }\n\n      modal.modal('show');\n      $('#employeeName').html(option);\n      $('#employeeName').select2({\n        dropdownParent: $('#modalLeaveOffice')\n      });\n      $('#modalTitle').text('Tambah Data Izin');\n      form.attr('action', \"{{ route('leave-office.store') }}\");\n      form.attr('method', 'POST');\n    },\n    error: function error(err) {\n      handleError(err);\n    }\n  });\n});\n\nfunction detail(id) {\n  $.ajax({\n    type: \"GET\",\n    url: \"{{ url('/permission/leave-office/detail') }}\" + \"/\" + id,\n    dataType: \"json\",\n    success: function success(res) {\n      var view = res.data.view;\n      $('#targetDetail').html(view);\n      $('.modal-title').text('Tiket Keluar');\n      $('#modalDetail').modal('show');\n    },\n    error: function error(err) {\n      handleError(err);\n    }\n  });\n}\n\nfunction changeEmployee() {\n  var val = $('#employeeName').val();\n\n  if (val == \"\") {\n    $('#divisionId').val('');\n    $('#divisionName').val('');\n    $('#positionId').val('');\n    $('#positionName').val('');\n  } else {\n    $.ajax({\n      type: \"GET\",\n      url: \"{{ url('/employees/getDivision') }}\" + \"/\" + val,\n      dataType: \"json\",\n      success: function success(res) {\n        console.log(res);\n        $('#divisionId').val(res.data.division.id);\n        $('#divisionName').val(res.data.division.name);\n        $('#positionId').val(res.data.position.id);\n        $('#positionName').val(res.data.position.name);\n      },\n      error: function error(err) {\n        console.error('error', err);\n        handleError(err);\n      }\n    });\n  }\n}\n\nfunction save() {\n  var data = $('#formLeaveOffice').serialize();\n  var url = form.attr('action');\n  var method = form.attr('method');\n  $.ajax({\n    type: method,\n    url: url,\n    data: data,\n    dataType: \"json\",\n    beforeSend: function beforeSend() {\n      elem.attr('disabled', true);\n      elem.text('Menyimpan data ...');\n    },\n    success: function success(res) {\n      elem.attr('disabled', false);\n      elem.text('Simpan');\n      iziToast['success']({\n        message: 'Divisi berhasil di simpan',\n        position: \"topRight\"\n      });\n      modal.modal(\"hide\");\n      dataTables.ajax.reload();\n      document.getElementById('formLeaveOffice').reset();\n    },\n    error: function error(err) {\n      handleError(err, elem);\n    }\n  });\n}\n\nfunction edit(id, url) {\n  $.ajax({\n    type: \"GET\",\n    url: url,\n    dataType: 'json',\n    success: function success(res) {\n      console.log(res);\n      elem.attr('disabled', false);\n      elem.text('Simpan');\n      form.attr('action', url);\n      form.attr('method', 'PUT');\n      modal.modal('show');\n      var employees = res.data.employee;\n      var data = res.data.data;\n      var option = \"<option value=''>- Pilih Karyawan -</option>\";\n      var selected = \"\";\n\n      for (var a = 0; a < employees.length; a++) {\n        if (employees[a].id == data.employee_id) {\n          selected = 'selected';\n        } else {\n          selected = \"\";\n        }\n\n        console.log(selected);\n        option += \"<option \".concat(selected, \" value=\\\"\").concat(employees[a].id, \"\\\">\").concat(employees[a].name, \"</option>\");\n      }\n\n      $('#employeeName').html(option);\n      $('#employeeName').select2({\n        dropdownParent: $('#modalLeaveOffice')\n      });\n      $('#divisionId').val(data.division.id);\n      $('#divisionName').val(data.division.name);\n      $('#positionId').val(data.position.id);\n      $('#positionName').val(data.position.name);\n      $('#leaveHour').val(res.data.hour);\n      $('#leaveMinute').val(res.data.minute);\n      $('#leaveDate').val(res.data.date);\n      $('#notes').val(data.notes);\n      $('#modalTitle').text('Edit Data Izin');\n    },\n    error: function error(err) {\n      handleError(err, elem);\n    }\n  });\n}\n\nfunction deleteLeave(id) {\n  Swal.fire({\n    title: 'Apakah anda yakin ingin menghapus divisi ini?',\n    showDenyButton: true,\n    showCancelButton: false,\n    confirmButtonText: 'Ya! Hapus',\n    denyButtonText: \"Batalkan\"\n  }).then(function (result) {\n    /* Read more about isConfirmed, isDenied below */\n    if (result.isConfirmed) {\n      $.ajax({\n        type: \"DELETE\",\n        url: \"{{ url('/permission/leave-office/') }}\" + \"/\" + id,\n        success: function success(res) {\n          iziToast['success']({\n            message: 'Posisi berhasil di simpan',\n            position: \"topRight\"\n          });\n          dataTables.ajax.reload();\n        },\n        error: function error(err) {\n          var message = err.responseJSON.message;\n\n          if (message == 'FAILED') {\n            iziToast['error']({\n              message: err.responseJSON.data.error,\n              position: \"topRight\"\n            });\n          } else {\n            iziToast['error']({\n              message: message,\n              position: \"topRight\"\n            });\n          }\n        }\n      });\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/employee/index.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/employee/index.js");
/******/ 	
/******/ })()
;